#! /usr/bin/env python

import argparse
import re
import shutil


def create_setup_env_file(
    deployment_name, use_frozen, freeze_chill, cal_version, owner
):
    shutil.copy("setup-env.template", "setup-env")

    use_frozen = {"floating": "0", "frozen": "1", "chilly": "2"}.get(
        use_frozen, use_frozen
    )

    with open("setup-env", "r") as file:
        content = file.read()

        # Update DEPLOYMENT_NAME
        content = re.sub(
            r"DEPLOYMENT_NAME=cluster-name",
            f"DEPLOYMENT_NAME={deployment_name}",
            content,
        )

        # Update USE_FROZEN
        content = re.sub(r"USE_FROZEN=[\d]", f"USE_FROZEN={use_frozen}", content)

        # Update FREEZE_CHILL
        content = re.sub(r"FREEZE_CHILL=[\d]", f"FREEZE_CHILL={freeze_chill}", content)

        # Update CAL_VERSION
        content = re.sub(r"CAL_VERSION=latest", f"CAL_VERSION={cal_version}", content)

        # Update OWNER
        content = re.sub(r"OWNER=spacetelescope", f"OWNER={owner}", content)

    with open("setup-env", "w+") as file:
        file.write(content)

    print(content)


def main():
    parser = argparse.ArgumentParser(
        description="Create setup-env file to define image build properties."
    )
    parser.add_argument(
        "deployment",
        choices=["tike", "roman", "jwebbinar"],
        help="The deployment name defining image contents.",
    )
    parser.add_argument(
        "--use-frozen",
        type=str,
        choices=["0", "1", "2", "floating", "frozen", "chilly"],
        default="floating",
        help="Use floating (default: 0).",
    )
    parser.add_argument(
        "--freeze-chill",
        type=int,
        default=0,
        choices=[0, 1],
        help="Don't freeze/chill requirements (default: 0).",
    )
    parser.add_argument(
        "--cal-version",
        default="latest",
        help="Calibration s/w version when applicable (default: latest).",
    )
    parser.add_argument(
        "--owner",
        type=str,
        default="spacetelescope",
        help="Repo used to build or pull scipy-notebook image,  spacetelescope(build) or jupyter(pull)",
    )
    args = parser.parse_args()

    create_setup_env_file(
        args.deployment,
        args.use_frozen,
        args.freeze_chill,
        args.cal_version,
        args.owner,
    )


if __name__ == "__main__":
    main()
