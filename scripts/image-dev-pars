#! /bin/bash

# Source file to mount key directories onto their corresponding locations
# inside the docker image.  this enables development of scripts in the
# context of Docker without rebuilding the image over-and-over.
#
# Dev mode where some image dirs map directly to their host git sources
#
# Mounts the following rw into the container:
#
# 1. deployments/common/image/common-scripts --> /opt/common-scripts
#
# 2. deployments/common/image/common-env --> /opt/common-env
#
# 3. deployments/common/image/tools --> /opt/tools
#
# 4. deployments/<mission>/image/environments --> /opt/environments
#

COMMON_MOUNTS="-v ${COMMON_IMAGE_DIR}/common-scripts:/opt/common-scripts:rw"
COMMON_MOUNTS="${COMMON_MOUNTS} -v ${COMMON_IMAGE_DIR}/common-env:/opt/common-env:rw"
COMMON_MOUNTS="${COMMON_MOUNTS} -v ${COMMON_IMAGE_DIR}/tools:/opt/tools:rw"

MISSION_MOUNTS="-v ${IMAGE_DIR}/environments:/opt/environments:rw"
MISSION_MOUNTS="${MISSION_MOUNTS} -v ${IMAGE_DIR}/env-frozen:/opt/env-frozen:rw"

# If the first parameter is --dev,  run dev mode where some sources
# are mapped directly into the container for live development.
DEV_MODE=${1:-""}
if [[ "${DEV_MODE}" == "--dev" ]]; then
    shift;
    echo "Mounting development directories into lab session. Changes to affected files will be reflected outside Docker."
    export DEV_PARS="${COMMON_MOUNTS} ${MISSION_MOUNTS} -e CLEAR_PKG_CACHES=0 -e PATH=/opt/conda/bin:/opt/conda/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/common-scripts:/opt/tools"
else
    export DEV_PARS=""
fi

IMAGE_RUN_PARS="${IMAGE_RUN_PARS} ${DEV_PARS}"
