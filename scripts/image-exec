#! /bin/bash -eu

# Run an arbitrary command using the image specified by NOTEBOOK_ID,
# which normally defaults to the notebook image but can be overridden.
#
# Customize Docker parameters specified using env var IMAGE_RUN_PARS.
#
cd $IMAGE_DIR

export EXEC_ID=${EXEC_ID:-${NOTEBOOK_ID}}

SP_HOME=${SP_HOME:-""}               # host dir to mount as rw /home/jovyan
SP_HUB_INIT=${SP_HUB_INIT:-""}       # run hub's post-start-hook to init account
SP_USER=${SP_USER:-""}               # run as the specified user id, or root or jovyan

if [[ ${SP_HOME} ]]; then
    echo "Mounting host directory SP_HOME=${SP_HOME} as /home/jovyan inside Docker."
    IMAGE_RUN_PARS="$IMAGE_RUN_PARS -v `abspath ${SP_HOME}`:/home/jovyan"
    mkdir -p ${SP_HOME}
fi

if [ ${SP_HUB_INIT} ]; then
    echo "Running post-start-hook to create/update user environment."
    docker run $IMAGE_RUN_PARS  $EXEC_ID  /opt/environments/post-start-hook off-hub
fi

if [[ ${SP_USER} ]]; then
    echo "Running as host user SP_USER=${SP_USER} SP_GROUP=users inside Docker."
    echo "This uid will be reflected by any created files residing on rw volume mounts,  e.g. setting SP_HOME."
    IMAGE_RUN_PARS="$IMAGE_RUN_PARS --user ${SP_USER} --group-add users"
fi

docker run $IMAGE_RUN_PARS  $EXEC_ID $*
